{"version":3,"file":"static/js/63.a201d110.chunk.js","mappings":"+PAGaA,EAAOC,EAAAA,EAAAA,KAAH,sPAaJC,EAAQD,EAAAA,EAAAA,MAAH,gMAUZE,GAAUC,EAAAA,EAAAA,IAAH,+JAcAC,EAASJ,EAAAA,EAAAA,OAAH,yfAwBFE,G,gDCzDF,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,OAAQA,EAAEC,OAAON,MACf,IAAK,OACHC,EAAQI,EAAEC,OAAOC,OACjB,MACF,IAAK,SACHJ,EAAUE,EAAEC,OAAOC,OAKxB,EAmBKC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAChB,EAAD,CAAMsB,SAvBY,SAAAJ,GAClBA,EAAEK,iBACF,IAAMC,EAAcf,EAASgB,MAAK,SAAAC,GAAI,OAAIA,EAAKb,OAASA,CAAlB,IAEhCc,EAAU,CACdd,KAAMA,EACNE,OAAQA,GAEV,GAAIS,EAGF,OAFAI,IAAAA,OAAAA,KAAA,UAAwBf,EAAxB,iCACAQ,IAGFd,GAASsB,EAAAA,EAAAA,IAAWF,IACpBN,GACD,EAQC,WACE,4BACE,SAACnB,EAAD,CACEkB,MAAOP,EACPiB,SAAUb,EACVc,KAAK,OACLlB,KAAK,OACLmB,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,4BACE,SAACjC,EAAD,CACEkB,MAAOL,EACPe,SAAUb,EACVc,KAAK,MACLlB,KAAK,SACLmB,YAAY,eACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,SAAC9B,EAAD,CAAQ0B,KAAK,SAAb,2BAGL,CC3EM,I,wBAAMK,EAAQnC,EAAAA,EAAAA,MAAH,6UAiBLoC,EAAcpC,EAAAA,EAAAA,MAAH,8K,UCbXqC,EAAS,WACpB,IAAMlB,GAAQV,EAAAA,EAAAA,IAAY6B,EAAAA,IACpBhC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAAC4B,EAAD,oCAEE,SAACC,EAAD,CACEjB,MAAOA,EACPU,SAPiB,SAAAZ,GAAC,OAAIX,GAASiC,EAAAA,EAAAA,IAAgBtB,EAAEuB,cAAcrB,OAA7C,EAQlBW,KAAK,OACLlB,KAAK,aAIZ,ECpBY6B,EAAUzC,EAAAA,EAAAA,GAAH,qIASP0C,EAAc1C,EAAAA,EAAAA,GAAH,qRAcX2C,EAAW3C,EAAAA,EAAAA,GAAH,ihBAqBR4C,GAAiB5C,EAAAA,EAAAA,GAAO2C,EAAP3C,CAAH,oqBAoCdI,EAASJ,EAAAA,EAAAA,OAAH,qX,6BCvEN6C,EAAkB,SAAC,GAA0B,IAAxBjC,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQgC,EAAS,EAATA,GAC9C,GAAkCnC,EAAAA,EAAAA,WAAS,GAA3C,eAAOoC,EAAP,KAAkBC,EAAlB,KACM1C,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,UAACqC,EAAD,CACEK,aAjBqB,WACvBD,GAAa,EACd,EAgBGE,aAdqB,WACvBF,GAAa,EACd,EAUC,WAIE,UAACP,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAQS,KAAM,KADhB,IACuBvC,MAEvB,UAAC8B,EAAD,YACE,SAAC,MAAD,CAAeS,KAAM,KACpBrC,QAMJiC,IACC,SAAC,EAAD,CAAQjB,KAAK,SAASsB,QA1BP,SAAAnC,GACnBX,GAAS+C,EAAAA,EAAAA,IAAcP,GACxB,EAwBK,UACE,SAAC,MAAD,CAAUK,KAAM,GAAIG,MAAM,gBAKnC,ECpDYC,EAAOvD,EAAAA,EAAAA,GAAH,uDCGJwD,EAAc,WACzB,IAAMC,GAAmBhD,EAAAA,EAAAA,IAAYiD,EAAAA,IAErC,OACE,SAACH,EAAD,UACGE,EAAiBE,KAAI,gBAAG/C,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQgC,EAAjB,EAAiBA,GAAjB,OACpB,SAACD,EAAD,CAA0BjC,KAAMA,EAAME,OAAQA,EAAQgC,GAAIA,GAApCA,EADF,KAK3B,ECbYc,EAAY5D,EAAAA,EAAAA,IAAH,qcAiBT6D,EAAU7D,EAAAA,EAAAA,GAAH,oIAQP8D,GAAQ9D,EAAAA,EAAAA,GAAH,wJASL+D,GAAQ/D,EAAAA,EAAAA,EAAH,oJASLgE,GAAOhE,EAAAA,EAAAA,IAAH,yDAKJiE,GAAWjE,EAAAA,EAAAA,IAAH,8ECxCN,SAASkE,KACtB,IAAM1D,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvByD,GAAQ1D,EAAAA,EAAAA,IAAY2D,EAAAA,IAE1B,OACE,UAACJ,GAAD,YACE,UAACJ,EAAD,YACE,SAACC,EAAD,yBACA,SAACxD,EAAD,KACA,SAACgC,EAAD,QAEA,UAAC4B,GAAD,YACA,SAACH,GAAD,uBACCK,IAAS,uBAAIA,IACb3D,EAAS6D,OAAS,GACjB,SAACb,EAAD,KAEA,SAACO,GAAD,2CAKT,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  margin: 0 auto;\n  padding: 40px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  border-radius: 5px;\n  border: 2px solid #827081;\n  background-color: #F5B2D4;\n`;\n\nexport const Input = styled.input`\n  margin: 0 auto;\n  border-radius: 4px;\n  padding: 8px 18px;\n  border: 1px solid #827081;\n  background-color: #f1e4f0;\n  outline: transparent;\n  color: #827081;\n`;\n\nconst Explode = keyframes`\n0% {\n  transform: scale(0);\n}\n25% {\n  transform: scale(1.5);\n  opacity: 1;\n}\n100% {\n  transform: scale(50);\n  opacity: 0;\n}\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  border-radius: 5px;\n  padding: 10px 15px;\n  border: 1px solid #827081;\n  background-color: #f1e4f0;\n  font-size: 16px;\n  font-weight: bold;\n  overflow: hidden;\n  color: #827081;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: #ffffff;\n    transform: scale(0);\n  }\n\n  &:hover:after {\n    animation: ${Explode} 0.5s ease-out;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmitAdd = e => {\n    e.preventDefault();\n    const isNameExist = contacts.find(item => item.name === name);\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n    if (isNameExist) {\n      Notiflix.Notify.info(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmitAdd}>\n      <label>\n        <Input\n          value={name}\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <Input\n          value={number}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  width: 300px;\n  padding: 20px 0;\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  border-radius: 5px;\n  border: 2px solid #827081;\n  background-color: #F5B2D4;\n  color: #f1e4f0;\n  font-size: 20px;\n  font-style: italic;\n  font-weight: bold;\n`;\n\nexport const FilterField = styled.input`\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: 1px solid #827081;\n  background-color: #f1e4f0;\n  outline: transparent;\n  color: #827081;\n`;\n","import React from 'react';\nimport { Label, FilterField } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = e => dispatch(setStatusFilter(e.currentTarget.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <FilterField\n        value={value}\n        onChange={onFilterChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.ul`\n  font-size: 20px;\n  color: #827081;\n  font-style: italic;\n  padding: 0;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ContactItem = styled.li`\n  padding-bottom: 5px;\n  min-width: 200px;\n  font-size: 24px;\n  color: #827081;\n  font-style: italic;\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 15px;\n  border-bottom: 1px solid #827081;\n`;\n\nexport const ListItem = styled.li`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  min-width: 570px;\n  height: 40px;\n  position: relative;\n  border-radius: 5px;\n  background: linear-gradient(to right, #f5b2d4 35%, #f1e4f0 100%);\n  margin-bottom: 25px;\n  padding: 10px 0px 10px 50px;\n  color: darkslategray;\n  box-shadow: 1px 2px 1px -1px #777;\n  transition: background 200ms ease-in-out;\n\n  &:hover {\n    background: linear-gradient(to right, #f5b2d4 0%, #f5b2d4 100%);\n  }\n`;\n\nexport const ListItemShadow = styled(ListItem)`\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    position: absolute;\n    content: '';\n    bottom: 13px;\n    right: 7px;\n    width: 25%;\n    top: 0;\n    box-shadow: 0 15px 10px #777;\n    transform: rotate(4deg);\n    transition: all 150ms ease-in-out;\n  }\n\n  &::after {\n    position: absolute;\n    content: '';\n    top: 20px;\n    left: 15px;\n    border-radius: 50%;\n    box-shadow: inset 1px 1px 1px 0px rgba(0, 0, 0, 0.5),\n      inset 0 0 0 25px #f1e4f0;\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n  }\n\n  &:hover::before {\n    transform: rotate(0deg);\n    bottom: 20px;\n    z-index: -10;\n  }\n`;\n\nexport const Button = styled.button`\n  // display: flex;\n  // align-items: center;\n  // justify-content: center;\n  border-radius: 20px;\n  border: none;\n  width: 60px;\n  height: 40px;\n  color: white;\n  font-size: 14px;\n  text-align: center;\n  line-height: 50px;\n  text-decoration: none;\n  // background: linear-gradient(45deg, #827081, #cda2cb);\n  background: transparent;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { RotatingLoader } from 'components/Loader/Loader';\nimport { Contact, Button, ListItemShadow, ContactItem } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n// import { updateContact } from 'redux/contacts/operations';\nimport { BsTrash3 } from 'react-icons/bs';\nimport { ImUser } from 'react-icons/im';\nimport { MdPhoneInTalk } from 'react-icons/md';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const handleDelete = e => {\n    dispatch(deleteContact(id));\n  };\n\n  // const handleUpdate = e => [\n  //   dispatch(updateContact(id))\n  // ]\n\n  return (\n    <ListItemShadow\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Contact>\n        <ContactItem>\n          <ImUser size={25}/> {name}\n        </ContactItem>\n        <ContactItem>\n          <MdPhoneInTalk size={25}/> \n          {number}\n        </ContactItem>\n      </Contact>\n      {/* <Button type=\"button\" onClick={handleUpdate}>\n        Edit\n      </Button> */}\n      {isHovered && (\n        <Button type=\"button\" onClick={handleDelete}>\n          <BsTrash3 size={25} color='#827081'/>\n        </Button>\n      )}\n    </ListItemShadow>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 0;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  \n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => (\n        <ContactListItem key={id} name={name} number={number} id={id} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  min-width: 350px;\n  background-image: url('./images/bg-image.webp');\n  background-size: cover;\n  padding-top: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  // background-color: rgba(230, 52, 98, 0.3);\n  background-image: url('https://wallpaperaccess.com/full/632782.jpg');\n  background-size: cover;\n  background-position: 50% 100%;\n  height: 100vh;\n  position: relative;\n  top: -80px;\n`;\n\nexport const Heading = styled.h1`\n  margin-bottom: 15px;\n  font-size: 42px;\n  font-style: italic;\n  font-weight: bold;\n  color: #827081;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  font-size: 36px;\n  font-style: italic;\n  font-weight: bold;\n  color: #827081;\n`;\n\nexport const Empty = styled.p`\n  margin: 0 auto;\n  margin-top: 50px;\n  font-size: 44px;\n  font-style: italic;\n  font-weight: bold;\n  color: #827081;\n`;\n\nexport const Main = styled.div`\n  display: flex;\n  gap: 150px;\n`;\n\nexport const Contacts = styled.div`\n// width: 100px;\n// height: 100px;\n// margin: 0 auto`;\n","import { useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Container, Heading, Title, Empty, Main, Contacts } from '../components/App.styled';\nimport {\n  selectContacts,\n  selectError,\n} from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  return (\n    <Main>\n      <Container>\n        <Heading>Phonebook</Heading>\n        <ContactForm />\n        <Filter />\n        </Container>\n        <Contacts>\n        <Title>Contacts</Title>\n        {error && <p>{error}</p>}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <Empty>Your phonebook is empty</Empty>\n        )}\n        </Contacts>\n    </Main>\n  );\n}\n"],"names":["Form","styled","Input","Explode","keyframes","Button","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","useState","name","setName","number","setNumber","handleInputChange","e","target","value","reset","onSubmit","preventDefault","isNameExist","find","item","contact","Notiflix","addContact","onChange","type","placeholder","pattern","title","required","Label","FilterField","Filter","selectFilter","setStatusFilter","currentTarget","Contact","ContactItem","ListItem","ListItemShadow","ContactListItem","id","isHovered","setIsHovered","onMouseEnter","onMouseLeave","size","onClick","deleteContact","color","List","ContactList","filteredContacts","selectFilteredContacts","map","Container","Heading","Title","Empty","Main","Contacts","ContactsPage","error","selectError","length"],"sourceRoot":""}